<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.server2.mapper.ScheduleMapper">
    <resultMap id="ScheduleDtoMap" type="com.example.common.dto.ScheduleDto">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="startDateTime" column="start_date_time"/>
        <result property="endDateTime" column="end_date_time"/>
        <result property="allDay" column="all_day"/>
        <result property="location" column="location"/>
        <result property="organizer" column="organizer"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="selectAllSchedules" resultMap="ScheduleDtoMap">
        SELECT * FROM schedule
    </select>

    <select id="selectScheduleById" resultMap="ScheduleDtoMap" parameterType="long">
        SELECT * FROM schedule WHERE id = #{scheduleId}
    </select>

    <insert id="insertSchedule" parameterType="com.example.common.dto.ScheduleDto">
        INSERT INTO schedule (
            title, description, start_date_time, end_date_time, all_day,
            location, organizer, status, created_at, updated_at
        ) VALUES (
                     #{title}, #{description}, #{startDateTime}, #{endDateTime}, #{allDay},
                     #{location}, #{organizer}, #{status}, #{createdAt}, #{updatedAt}
                 )
    </insert>

    <update id="updateSchedule" parameterType="com.example.common.dto.ScheduleDto">
        UPDATE schedule
        SET title = #{title},
            description = #{description},
            start_date_time = #{startDateTime},
            end_date_time = #{endDateTime},
            all_day = #{allDay},
            location = #{location},
            organizer = #{organizer},
            status = #{status},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <delete id="deleteSchedule" parameterType="long">
        DELETE FROM schedule WHERE id = #{scheduleId}
    </delete>
</mapper>
